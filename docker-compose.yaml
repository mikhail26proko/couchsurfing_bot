version: '2.1'

services:
  couch_bot-php:
    user: 1000:1000
    container_name: couch_bot-php
    build: ./docker/php
    env_file:
      - ${PWD:-./}/.env
    volumes:
      - ${PWD:-./}:/var/www
      - ${PWD:-./}/var/composer:/var/www/var/composer
    environment:
      COMPOSER_HOME: /var/www/var/composer
      XDEBUG_CONFIG: client_host=${DOCKER_GATEWAY_HOST:-host.docker.internal}
      PHP_IDE_CONFIG: serverName=couch_bot
    depends_on:
      couch_bot-postgres:
        condition: service_healthy

  couch_bot-postgres:
    container_name: couch_bot-postgres
    image: postgres:11.2-alpine
    volumes:
      - couch_bot-postgres-data:/var/lib/postgresql/data
      - ./var/pgdumps:/var/pgdumps
    ports:
      - '5433:5432'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: pg_isready -U root -d couch_bot -p 5432
      interval: 5s
      timeout: 5s
      retries: 10

  couch_bot-nginx:
    container_name: couch_bot-nginx
    image: nginx:latest
    volumes:
      - ${PWD:-./}:/var/www
      - ${PWD:-./}/docker/nginx/config:/etc/nginx/conf.d
      - ${PWD:-./}/docker/nginx/logs:/var/log/nginx
    ports:
      - '8081:80'
      - '4434:443'
    depends_on:
      - couch_bot-php

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-14}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
  couch_bot-postgres-data:
###> doctrine/doctrine-bundle ###
  db-data:
###< doctrine/doctrine-bundle ###
